name: Run Test CI & Merge

on:
  pull_request:

jobs:
  code-test:
    name: code-test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.13.*' # The Go version to download (if necessary) and use.
      - name: Generate config file
        run: make generate-api-key SACLOUD_API_TOKEN=${{ secrets.ACCESS_TOKEN }} SACLOUD_API_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} SACLOUD_API_ZONE=tk1a
      - name: Run Test
        run: make verify TEST_ZONE_NAME=${{ secrets.TEST_ZONE_NAME }}

  post-test:
    name: post-test
    needs: code-test
    runs-on: ubuntu-latest
    if: ${{ failure() }} == false && contains(github.event.pull_request.head.ref, '/')
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2
      - name: Get version
        run: echo "::set-env name=TAG_NAME::${HEAD_REF##*/}"
        env:
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
      - name: update helm chart
        run: make rendered-manifest.yaml IMAGE_TAG=${TAG_NAME}
      - name: update helm repo
        run: make helm-repository
      - uses: EndBug/add-and-commit@v4
        with:
          add: "-A"
          message: "Update helm repo"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Get version
        run: echo "::set-env name=VERSION::${TAG_NAME%%-cert-manager-v*}"
      - name: Run Buildx
        run: |
          make push PLATFORM=linux/amd64,linux/arm64 IMAGE_TAG=${VERSION}
      - name: add label "automerge"
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['automerge']
            })
      - name: automerge
        uses: "pascalgn/automerge-action@v0.9.0"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_DELETE_BRANCH: "true"
          MERGE_FORKS: "false"
